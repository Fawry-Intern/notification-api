spring:
  # Jdbc Configuration
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/notification_db
    username: postgres
    password: postgres

  # Jpa/hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # Kafka Config
  kafka:
    listener:
      missing-topics-fatal: false
      ack-mode: RECORD
    consumer:
      enable-auto-commit: true
      bootstrap-servers: localhost:9092
      group-id: notification_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        allow.auto.create.topics: true
        spring.json.trusted.packages: "com.fawry.kafka.events"
        spring.json.type.mapping: productEvent:com.fawry.kafka.events.ProductEvent, registerEvent:com.fawry.kafka.events.RegisterEvent

    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: true
        spring.json.type.mapping: registerEvent:com.fawry.kafka.events.RegisterEvent
# Mail Configuration
server:
  port: 2222
custom:
  mail:
    host: smtp.gmail.com
    port: 587
    username: muhammadhussein2312@gmail.com
    password: mxgw pyih dfpx sejg
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
source:
  sender:
    email: muhammadhussein2312@gmail.com

# Eureka Server Configuration
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8765/eureka


notification:
  user:
    topic:
      name: user-event